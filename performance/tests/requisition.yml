execution:
  - concurrency: 1
    iterations: 10
    scenario: requisition-workflow
  - concurrency: 1
    iterations: 1
    scenario: search-one-page

scenarios:
  get-user-token:
    requests:
      - url: ${__P(base-uri)}/api/oauth/token
        method: POST
        label: GetUserToken
        headers:
          Authorization: Basic ${__base64Encode(${__P(user-auth)})}
        body:
          grant_type: password
          username: ${__P(username)}
          password: ${__P(password)}
        extract-jsonpath:
          access_token:
            jsonpath: $.access_token
  initiate-requisition:
    requests:
      # program = family planning, facility = Kankao Health Facility
      - url: ${__P(base-uri)}/api/requisitions/periodsForInitiate?programId=dce17f2e-af3e-40ad-8e00-3496adef44c3&facilityId=7938919f-6f61-4d1a-a4dc-923c31e9cd45&emergency=false
        method: GET
        label: GetPeriodsForInitiate
        headers:
          Authorization: Bearer ${access_token}
        extract-jsonpath:
          periodUuid:
            jsonpath: $.[:1]id
        jsr223:
          script-text: |
            String uuid = vars.get("periodUuid");
            uuid = uuid.replaceAll(/"|\[|\]/, "");
            vars.put("periodUuid", uuid);
      - url: ${__P(base-uri)}/api/requisitions/initiate?program=dce17f2e-af3e-40ad-8e00-3496adef44c3&facility=7938919f-6f61-4d1a-a4dc-923c31e9cd45&suggestedPeriod=${periodUuid}&emergency=false
        method: POST
        label: InitiateRequisition
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        extract-jsonpath:
          reqUuid:
            jsonpath: $.id
        jsr223:
          script-text: |
            String uuid = vars.get("reqUuid");
            uuid = uuid.replaceAll(/"|\[|\]/, "");
            vars.put("reqUuid", uuid);
  update-requisition:
    requests:
      - url: ${__P(base-uri)}/api/requisitions/${reqUuid}
        method: GET
        label: GetRequisitionToUpdate
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          script-text: |
            import groovy.json.JsonSlurper;
            import groovy.json.JsonOutput;

            def response = prev.getResponseDataAsString();

            def jsonSlurper = new JsonSlurper();
            def requisition = jsonSlurper.parseText(response);

            requisition.requisitionLineItems.eachWithIndex { line, index ->
              line.skipped = false;
              line.beginningBalance = (index + 1) * 10;
              line.totalConsumedQuantity = line.beginningBalance / 2;
              line.totalReceivedQuantity = line.beginningBalance / 5;
              line.requestedQuantity = line.beginningBalance * 2;
              line.requestedQuantityExplanation = "we need more";
              line.totalStockoutDays = 0;
            }

            vars.put("requisition", JsonOutput.toJson(requisition));
      - url: ${__P(base-uri)}/api/requisitions/${reqUuid}
        method: PUT
        label: UpdateRequisition
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        body:
          ${requisition}
  submit-requisition:
    requests:
      - url: ${__P(base-uri)}/api/requisitions/${reqUuid}/submit
        method: POST
        label: SubmitRequisition
        headers:
          Authorization: Bearer ${access_token}
  authorize-requisition:
    requests:
      - url: ${__P(base-uri)}/api/requisitions/${reqUuid}/authorize
        method: POST
        label: AuthorizeRequisition
        headers:
          Authorization: Bearer ${access_token}
  reject-requisition:
    requests:
      - url: ${__P(base-uri)}/api/requisitions/${reqUuid}/reject
        method: PUT
        label: RejectRequisition
        headers:
          Authorization: Bearer ${access_token}
  approve-requisition:
    requests:
      - url: ${__P(base-uri)}/api/requisitions/${reqUuid}/approve
        method: POST
        label: ApproveRequisition
        headers:
          Authorization: Bearer ${access_token}
  delete-requisition:
    requests:
      - url: ${__P(base-uri)}/api/requisitions/${reqUuid}
        method: DELETE
        label: DeleteRequisition
        headers:
          Authorization: Bearer ${access_token}
  requisition-workflow:
    requests:
      - include-scenario: get-user-token
      - include-scenario: initiate-requisition
      - include-scenario: update-requisition
      - include-scenario: submit-requisition
      - include-scenario: authorize-requisition
      - include-scenario: reject-requisition
      - include-scenario: submit-requisition
      - include-scenario: authorize-requisition
      - include-scenario: approve-requisition
      - include-scenario: reject-requisition
      - include-scenario: delete-requisition
  search-one-page:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/requisitions/search
        method: GET
        label: GetAPageOfTenRequisitions
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        body:
          page: 1
          size: 10
